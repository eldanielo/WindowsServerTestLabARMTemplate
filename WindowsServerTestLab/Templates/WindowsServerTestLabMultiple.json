{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "defaultValue": "labuser",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "labsCount": {
      "defaultValue": "2",
      "type": "int",
      "metadata": {
        "description": "Number of Labs"
      }
    },
    "adminPassword": {
      "defaultValue": "Passw0rd",
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machines."
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Globally unique DNS Name for the Public IP used to access the Virtual Machines."
      }
    },

    "vmSizeEdge": {
      "type": "string",
      "defaultValue": "Standard_A4",
      "minLength": 1,
      "metadata": {
        "description": "VM Size"
      }
    },
    "vmSizeDC": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "minLength": 1,
      "metadata": {
        "description": "VM Size"
      }
    },
    "vmSizeApp": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "minLength": 1,
      "metadata": {
        "description": "VM Size"
      }
    },
    "vmSizeInet": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "minLength": 1,
      "metadata": {
        "description": "VM Size"
      }
    },
    "vmSizeClient": {
      "type": "string",
      "defaultValue": "Standard_A3",
      "minLength": 1,
      "metadata": {
        "description": "VM Size"
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    }
  },
  "variables": {

    "edge": "edge-",
    "dc": "dc-",
    "app": "app-",
    "inet": "inet-",
    "client": "client-",

  


    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "OSDiskName": "osdiskforwindowssimple",

    "addressPrefixCorpnet": "10.0.0.0/16",
    "addressPrefixOutside": "131.107.0.0/24",
    "subnetNameOutside": "Outside",
    "subnetNameCorpnet": "Corpnet",

    "subnetPrefixOutside": "131.107.0.0/24",
    "subnetPrefixCorpnet": "10.0.0.0/24",

    "vhdStorageType": "Standard_LRS",
    "publicIPAddressType": "Dynamic",
    "vhdStorageContainerName": "vhds",
    "vhdStorageName": "[concat('vhdstorage', uniqueString(resourceGroup().id))]",


    "virtualNetworkName": "VirtualNetwork_",

    "diagnosticsStorageName": "[variables('vhdStorageName')]",
    "diagnosticsStorageResourceGroup": "[resourcegroup().name]",
    "accountid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('diagnosticsStorageResourceGroup'), '/providers/','Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageName'))]",
    "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
    "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
    "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "wadcfgxstart": "[concat(variables('wadlogs'), variables('wadperfcounters1'), variables('wadperfcounters2'), '<Metrics resourceId=\"')]",
    "wadmetricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('diagnosticsStorageResourceGroup'), '/providers/', 'Microsoft.Compute/virtualMachines/', variables('edge'))]",
    "wadcfgxend": "><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('vhdStorageName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "properties": {
        "accountType": "[variables('vhdStorageType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('edge'), 'pip_', copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsNameForPublicIP'),  variables('edge'),copyindex())]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('dc'),'pip_',copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsNameForPublicIP'),  variables('dc'),copyindex())]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('app'),'pip_',copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsNameForPublicIP'),  variables('app'),copyindex())]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('inet'),'pip_',copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsNameForPublicIP'),  variables('inet'),copyindex())]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('client'),'pip_',copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsNameForPublicIP'),  variables('client'),copyindex())]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[concat(variables('virtualNetworkName'),copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "[variables('virtualNetworkName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefixCorpnet')]",
            "[variables('addressPrefixOutside')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetnameCorpnet')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefixCorpnet')]"
            }
          },
          {
            "name": "[variables('subnetNameOutside')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefixOutside')]"
            }
          }

        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('edge'), 'NicOne_', copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('edge'),'pip_',copyindex())]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'),copyindex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('edge'), 'ipconfig1')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "131.107.0.5",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('edge'),'pip_',copyindex()))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')),copyindex(), '/subnets/', variables('subnetNameOutside'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('edge'), 'NicTwo_',copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'),copyindex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('edge'), 'ipconfig2')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "131.107.0.6",
              "subnet": {
                "id":"[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')),copyindex(), '/subnets/', variables('subnetNameOutside'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('edge'), 'NicThree_',copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'),copyindex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('edge'), 'ipconfig3')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.0.5",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')),copyindex(), '/subnets/', variables('subnetNameCorpnet'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('dc'), 'NicOne_',copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('dc'),'pip_',copyindex())]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'),copyindex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('dc'), 'ipconfig1')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.0.4",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('dc'),'pip_',copyindex()))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')),copyindex(), '/subnets/', variables('subnetNameCorpnet'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('app'), 'Nic_',copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('app'),'pip_'),copyindex())]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'),copyindex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('app'), 'ipconfig1')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.0.6",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('app'),'pip_',copyindex()))]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')),copyindex(), '/subnets/', variables('subnetNameCorpnet'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('client'), 'NicOne_', copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('client'),'pip_',copyindex()))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'),copyindex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('client'), 'ipconfig1')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "131.107.0.7",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('client'),'pip_',copyindex()))]"
              },
              "subnet": {
                "id":"[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')),copyindex(), '/subnets/', variables('subnetNameOutside'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('client'), 'NicTwo_',copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'),copyindex())]"

      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('client'), 'ipconfig2')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.0.7",
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')),copyindex(), '/subnets/', variables('subnetNameCorpnet'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('inet'), 'Nic_',copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('inet'),'pip_',copyindex()))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'),copyindex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('inet'), 'ipconfig1')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "131.107.0.4",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('inet'),'pip_',copyindex()))]"
              },
              "subnet": {
                "id":"[concat(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')),copyindex(), '/subnets/', variables('subnetNameOutside'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('edge'),copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('edge'), 'NicOne_',copyindex()))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('edge'), 'NicTwo_',copyindex()))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('edge'), 'NicThree_',copyindex()))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSizeedge')]"
        },
        "osProfile": {
          "computerName": "[variables('edge')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('edge'),copyindex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": { "primary": true },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('edge'), 'NicOne_',copyindex()))]"
            },
            {
              "properties": { "primary": false },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('edge'), 'NicTwo_',copyindex()))]"
            },
            {
              "properties": { "primary": false },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('edge'), 'NicThree_',copyindex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('diagnosticsStorageName'), '.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('dc'),copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('dc'), 'NicOne_',copyindex()))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSizedc')]"
        },
        "osProfile": {
          "computerName": "[variables('dc')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('dc'),copyindex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": { "primary": true },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('dc'), 'NicOne_',copyindex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('diagnosticsStorageName'), '.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('app'),copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('app'), 'Nic_',copyindex()))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSizeapp')]"
        },
        "osProfile": {
          "computerName": "[variables('app')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('app'),copyindex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('app'), 'Nic_',copyindex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('diagnosticsStorageName'), '.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('client'),copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('client'), 'NicOne_',copyindex())]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('client'), 'NicTwo_',copyindex())]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSizeClient')]"
        },
        "osProfile": {
          "computerName": "[variables('client')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('client'),copyindex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": { "primary": true },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('client'), 'NicOne_',copyindex()))]"
            },
            {
              "properties": { "primary": false },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('client'), 'NicTwo_',copyindex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('diagnosticsStorageName'), '.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('inet'),copyindex())]",
      "copy": {
        "name": "loop",
        "count": "[parameters('labsCount')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('vhdStorageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('inet'), 'Nic_',copyindex()))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSizeInet')]"
        },
        "osProfile": {
          "computerName": "[variables('inet')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('vhdStorageName'), '.blob.core.windows.net/', variables('vhdStorageContainerName'), '/', variables('inet'),copyindex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('inet'), 'Nic_',copyindex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('diagnosticsStorageName'), '.blob.core.windows.net')]"
          }
        }
      }
    }
  ]
}
